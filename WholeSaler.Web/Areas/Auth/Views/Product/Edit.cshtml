@model WholeSaler.Web.Areas.Auth.Models.ViewModels.Product.ProductEditVM
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Auth/Views/Shared/_AuthLayout.cshtml";
}

<h1>Edit</h1>

<form method="post" asp-action="edit" asp-controller="product" asp-area="auth" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label asp-for="Colour"></label>
        <input asp-for="Colour" class="form-control" />
        <span asp-validation-for="Colour" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label>Product Images</label>
        <input type="file" class="form-control" name="productImages" multiple>
        <span class="text-muted">
            <p>You should use "ctrl" to choose more than one image.(*If you don't want to change Images,you have to leave empty this function*</p>
        </span>
    </div>
    <div class="form-group">
        <label asp-for="Stock"></label>
        <input asp-for="Stock" class="form-control" />
        <span asp-validation-for="Stock" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label asp-for="UnitPrice"></label>
        <input asp-for="UnitPrice" class="form-control" />
        <span asp-validation-for="UnitPrice" class="text-danger"></span>

    </div>

    <div class="form-group">
        <label asp-for="Description"></label>
        <input asp-for="Description" class="form-control" />
        <span asp-validation-for="Description" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label>Kategori</label>
        <select id="categorySelect">
            <option>@Model.Category.CategoryName</option>
        </select>
    </div>
    <div class="form-group">

        <input asp-for="Store.StoreName" class="form-control" value="@Model.Store.StoreName" hidden />


    </div>
    <div class="form-group">

        <input asp-for="Store.StoreId" class="form-control" value="@Model.Store.StoreId" hidden/>

    </div>
    <input type="hidden" id="nameInput" name="Category.CategoryName" value="@Model.Category.CategoryName">
  <input type="hidden" id="idInput" name="Category.CategoryId" value="@Model.Category.CategoryId" >

    <input  asp-for="Id" value="@Model.Id" hidden>
    @for (int i = 0; i < Model.Images.Count; i++)
    {
        <input type="hidden" name="Images.Index" value="@i" />
        <input type="hidden" name="Images[@i].FileName" value="@Model.Images[i].FileName" />
        <input type="hidden" name="Images[@i].Path" value="@Model.Images[i].Path" />
    }
    <div class="text-center">
        <input asp-for="SumOfSales" value="@Model.SumOfSales" hidden/>

        <button type="submit" class="btn btn-primary" style="margin-top:10px">Edit Product</button>
    </div>





</form>



<script>
    // API'den kategorileri çekmek için bir GET isteği yap
    fetch('https://localhost:7185/api/category')
        .then(response => response.json())
        .then(data => {

            const categorySelect = document.getElementById('categorySelect');
            console.log(data);
            data.forEach(category => {
                const option = document.createElement('option');
                option.value = category.id;
                option.textContent = category.name;
                categorySelect.appendChild(option);
            });

            // Kategori seçildiğinde çalışacak olan fonksiyon
            function categorySelected() {
                const selectedOption = document.getElementById('categorySelect').selectedOptions[0];
                const nameInput = document.getElementById('nameInput');
                const idInput = document.getElementById('idInput');

                // Seçilen kategorinin adını ve ID'sini alıp ilgili input alanlarına yerleştir
                nameInput.value = selectedOption.textContent;
                idInput.value = selectedOption.value;
            }

            // Select alanındaki seçim değiştiğinde categorySelected fonksiyonunu çağır
            document.getElementById('categorySelect').addEventListener('change', categorySelected);
        })
        .catch(error => {
            console.error('Kategorileri alma işlemi başarısız oldu:', error);
        });
</script>