@using Newtonsoft.Json
@using WholeSaler.Web.Models.ViewModels.Product.Filters.Electronics
@model List<WholeSaler.Web.Models.ViewModels.ShoppingCartVM.ProductForCartVM>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userId = ViewData["uId"];
    var visitorId = ViewData["visitorId"];
    var categoryName = ViewData["categoryName"];
    var subCategoryName = ViewData["subCategoryName"];
    var cartMessage = TempData["CartMessage"] as string;
    var noCartMessage = TempData["NoCartMessage"] as string;
    var productNameMessage = TempData["productNameMessage"] as string;
    var categories = ViewBag.Categories;
    var productFilters = ViewBag.ProductFilterVM as WholeSaler.Web.Models.ViewModels.Product.ProductForFilter;
    // var nonNullProperties = productFilters?.GetNonNullProperties();

var filterVm=  ViewBag.FilterVM as WholeSaler.Web.Models.ViewModels.Product.Filters.BaseProductFilterVM;


}
<link href="~/css/mystoreCard.css" rel="stylesheet" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
<style>
    .category {
        display: inline-block;
        /*         margin: 20px; */
        padding: 5px;
        /*         border: 1px solid #ccc; */
        /*     cursor: pointer; */
    }

    .subcategory-container {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
        min-width: 150px;
    }

    .subcategory {
        padding: 12px 16px;
        border-bottom: 1px solid #eee;
    }

    .category:hover .subcategory-container,
    .category .subcategory-container:hover {
        display: block;
    }

    .subcategory {
        padding: 10px;
        border-bottom: 1px solid #eee;
    }

        .subcategory:last-child {
            border-bottom: none;
        }

    .carousel-control-prev,
    .carousel-control-next {
        z-index: 1001; /* Ensure carousel controls are above the subcategory container */
    }
</style>


<div style="justify-content:center;height:90%;width:90%;margin-left:5%;margin-righ:5%;">
 

        <div class="row justify-content-center">
          
        </div>

    


    <div id="messageContainer" class="message-container">
        @if (!string.IsNullOrEmpty(productNameMessage))
        {
            <div class="alert alert-danger">
                <div class="d-flex justify-content-center align-items-center">
                    <h6>@productNameMessage</h6>

                </div>
            </div>

        }
    </div>
    <div id="messageContainer" class="message-container">
        @if (!string.IsNullOrEmpty(noCartMessage))
        {
            <div class="alert alert-danger">
                <div class="d-flex justify-content-center align-items-center">
                    <h6>@noCartMessage</h6>

                </div>
            </div>

        }
    </div>


    <div class="text-center" id="categoryDiv">
        @foreach (var category in categories as List<WholeSaler.Web.Areas.Auth.Models.ViewModels.Category.CategoryVM>)
        {

            <div class="category" style="color:#ff7400;display: inline-block; position: relative;">
                <span><a style="text-decoration:none" asp-controller="home" asp-action="category" asp-route-categoryName="@category.Name" asp-route-subCategoryName="">@category.Name</a></span>
                <div class="subcategory-container">
                    @foreach (var subCategory in category.SubCategories)
                    {
                        <div class="subcategory">
                            <a style="text-decoration:none" asp-controller="home" asp-action="category" asp-route-categoryName="@category.Name" asp-route-subCategoryName="@subCategory.Name"><span>@subCategory.Name</span></a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <div class="row">

        <div class="col-md-3" style="border:solid;height:750px;">
            @* filtreleme sistemi uygula*@
            <form asp-action="category" asp-controller="home" method="post">
                @if (subCategoryName!=null)
                {
                    @Html.Partial($"FilterPartialViews/_{subCategoryName}")
                }
                else
                {
                    <p>No specific filters available for this category.</p>
                }

                <input type="type" name="categoryName" value="@categoryName" hidden/>
                <input type="type" name="subCategoryName" value="@subCategoryName" hidden />

                <div>
                    <button type="submit">Filtered</button>
                </div>
             

            </form>
         @*    @if (nonNullProperties != null)
            {
                @foreach (var item in nonNullProperties)
                {
                    <h5>@($"{item.Key}: {item.Value}")</h5>
                }
            } *@
          




        </div>
        <div class="col-md-9" id="productDiv">

            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-md-2" style="height:300px;width:250px">
                        <form id="addToCartForm" asp-action="addtocart" asp-controller="shoppingcart" method="post">
                            <div class="card">
                                <div class="card-img">

                                    @if (item.Images == null || !item.Images.Any())
                                    {
                                        <img src="~/images/exampleimage.jpg" alt="Denim Jeans" style="width:100%;height:100px">
                                    }
                                    else
                                    {

                                        <div id="carousel-@item.Id" class="carousel slide" data-interval="false">
                                            <div class="carousel-inner">

                                                @for (var i = 0; i < item.Images.Count(); i++)
                                                {
                                                    <div class="carousel-item @(item.Images[i] == item.Images.First()? "active" : "")">
                                                        <img src="~/images/products/@item.Images[i].FileName" class="d-block w-100" alt="@item.Images[i].FileName" style="width:100%;height:100px">
                                                    </div>
                                                    <input type="hidden" name="Images.Index" value="@i" />
                                                    <input type="hidden" name="Images[@i].FileName" value="@item.Images[i].FileName" />
                                                    <input type="hidden" name="Images[@i].Path" value="@item.Images[i].Path" />
                                                }



                                            </div>
                                            <a class="carousel-control-prev" href="#carousel-@item.Id" role="button" data-slide="prev">
                                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Previous</span>
                                            </a>
                                            <a class="carousel-control-next" href="#carousel-@item.Id" role="button" data-slide="next">
                                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Next</span>
                                            </a>
                                        </div>

                                    }

                                </div>

                                @if (userId == null)
                                {
                                    <input name="UserId" value="@visitorId" hidden />
                                }
                                <input name="UserId" value="@userId" hidden />
                                <input name="Id" value="@item.Id" hidden />
                                <div>
                                    <a href="/store/index?storeId=@item.Store.StoreId" style="text-decoration:none">
                                        <span style="font-size:small;color:black;">
                                            @(item.Store?.StoreName ?? "Unknown")
                                        </span>
                                    </a>
                                </div>
                                <div class="card-body">
                                    <div style="height:75px">
                                        <a href="/product/details?productId=@item.Id" style="text-decoration:none;color:black;">
                                            <input name="Name" value="@item.Name" hidden />
                                            <span>@item.Name</span>
                                        </a>



                                    </div>
                                    <div>
                                        <span style="color:green;"><em>@string.Format("{0:F2}", item.UnitPrice) TL</em></span>
                                    </div>
                                    <input type="type" name="quantity" value="1" hidden />

                                    <input name="colour" value="@item.Color" hidden />
                                    <input name="sumOfSales" value="@item.SumOfSales" hidden />
                                    <input name="unitPrice" value="@item.UnitPrice" hidden />
                                    <input name="stock" value="@item.Stock" hidden />
                                    <input name="image" value="@item.Images" hidden />
                                    <input name="store.storeName" value="@item.Store?.StoreName" hidden />
                                    <input name="store.storeId" value="@item.Store?.StoreId" hidden />
                                    <input name="category.categoryname" value="@item.Category?.CategoryName" hidden />
                                    <input name="category.categoryId" value="@item.Category?.CategoryId" hidden />
                                    <input type="hidden" name="returnUrl" value="@Url.Action("Category", new { categoryName = categoryName, subCategoryName = subCategoryName, filter = JsonConvert.SerializeObject(productFilters) })" />
                                   

                                </div>
                                <button type="submit" class="addToCartButton">Add to Cart</button>

                            </div>
                        </form>
                    </div>
                }
            </div>
        </div>
        
    </div>
</div>

<script>
    // Mesajı gizlemek için JavaScript fonksiyonu
    // setTimeout(function () {
    //     var messageDiv = document.getElementById('messageDiv');
    //     if (messageDiv) {
    //         messageDiv.style.display = 'none';
    //     }
    // }, 2000);
    // setTimeout(function () {
    //     var messageDiv = document.getElementById('messageContainer');
    //     if (messageDiv) {
    //         messageDiv.style.display = 'none';
    //     }
    // }, 2000);

    document.querySelectorAll('.category').forEach(category => {
        category.addEventListener('mouseover', () => {
            category.querySelector('.subcategory-container').style.display = 'block';
        });

        category.addEventListener('mouseout', () => {
            category.querySelector('.subcategory-container').style.display = 'none';
        });
    });
    document.addEventListener('DOMContentLoaded', function () {
        const categories = document.querySelectorAll('.category');
        const categoryDiv = document.getElementById('categoryDiv');
        const productDiv = document.getElementById('productDiv');

        categories.forEach(category => {
            const subCategoryContainer = category.querySelector('.subcategory-container');

            category.addEventListener('mouseover', function () {
                subCategoryContainer.style.display = 'block';
                productDiv.style.pointerEvents = "none";
            });

            category.addEventListener('mouseout', function (event) {
                // Only hide the subcategory container if the mouse is not over it or its children
                if (!category.contains(event.relatedTarget)) {
                    subCategoryContainer.style.display = 'none';
                    productDiv.style.pointerEvents = "auto";
                }
            });

            subCategoryContainer.addEventListener('mouseover', function () {
                subCategoryContainer.style.display = 'block';
                productDiv.style.pointerEvents = "none";
            });

            subCategoryContainer.addEventListener('mouseout', function (event) {
                // Only hide the subcategory container if the mouse is not over the category or its children
                if (!category.contains(event.relatedTarget)) {
                    subCategoryContainer.style.display = 'none';
                    productDiv.style.pointerEvents = "auto";

                }
            });
        });
    });





    $(document).ready(function () {
        $('#addToCartForm').on('submit', function (event) {
            event.preventDefault(); // Prevent the form from submitting the traditional way

            // Serialize the form data
            var formData = $(this).serialize();

            // Send the form data via AJAX
            $.ajax({
                url: $(this).attr('action'), // The URL to submit the form data to
                type: $(this).attr('method'), // The HTTP method to use for the request (POST)
                data: formData,
                success: function (response) {
                    // Handle the response from the server
                    if (response.redirectUrl) {
                        // If the server indicates a redirect, perform it
                        window.location.href = response.redirectUrl;
                    } else {
                        var messageDiv = $('<div>', {
                            id: 'messageDiv',
                            class: 'col-md-6 alert alert-success',
                            css: { display: 'none' } // Initially hidden
                        });

                        // Create the message text div
                        var messageText = $('<div>', {
                            id: 'messageText',
                            class: 'd-flex justify-content-center align-items-center'
                        }).html('<p>The Product added successfully</p>');

                        // Append the message text to the message div
                        messageDiv.append(messageText);

                        // Append the message div to the DOM
                        $('.row.justify-content-center').append(messageDiv);

                        // Show the message div
                        messageDiv.show();

                        // Hide the message div after 4 seconds
                        setTimeout(function () {
                            messageDiv.fadeOut('slow', function () {
                                $(this).remove(); // Remove the message div from the DOM
                            });
                        }, 4000);
                       
                    }
                },
                error: function (xhr, status, error) {
                    // Handle any errors that occurred during the request
                    alert('An error occurred while adding the item to the cart. Please try again.');
                }
            });
        });
    });
</script>
